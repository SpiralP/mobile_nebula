name: Create release

on:
  push:
    branches: [master, main]
  workflow_dispatch:

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build android package
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          show-progress: false

      - name: Set up Go 1.22
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Install flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.1"

      - name: Install the google play key material
        env:
          GOOGLE_PLAY_API_JWT_BASE64: ${{ secrets.GOOGLE_PLAY_API_JWT_BASE64 }}
          GOOGLE_PLAY_KEYSTORE_BASE64: ${{ secrets.GOOGLE_PLAY_KEYSTORE_BASE64 }}
        run: |
          GOOGLE_PLAY_API_JWT_PATH="$RUNNER_TEMP/gp_api.json"
          echo "GOOGLE_PLAY_API_JWT_PATH=$GOOGLE_PLAY_API_JWT_PATH" >> $GITHUB_ENV
          echo -n "$GOOGLE_PLAY_API_JWT_BASE64" | base64 -d > "$GOOGLE_PLAY_API_JWT_PATH"

          GOOGLE_PLAY_KEYSTORE_PATH="$RUNNER_TEMP/gp_signing.jks"
          echo "GOOGLE_PLAY_KEYSTORE_PATH=$GOOGLE_PLAY_KEYSTORE_PATH" >> $GITHUB_ENV
          echo -n "$GOOGLE_PLAY_KEYSTORE_BASE64" | base64 -d > "$GOOGLE_PLAY_KEYSTORE_PATH"

      - name: Get build name and number, install dependencies
        run: |
          go install golang.org/x/mobile/cmd/gomobile@latest
          gomobile init

          flutter pub get

          touch env.sh

      - name: Build Android
        env:
          GOOGLE_PLAY_KEYSTORE_PASSWORD: ${{ secrets.GOOGLE_PLAY_KEYSTORE_PASSWORD }}
        run: |
          flutter build apk

      - name: Collect Android artifacts
        uses: actions/upload-artifact@v4
        with:
          name: MobileNebula
          path: build/app/outputs/flutter-apk/app-release.apk
          retention-days: 5

  release:
    needs: [build]

    permissions:
      contents: write

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: MobileNebula
          path: MobileNebula

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          NEXT_TAG="v$(gh release view --json tagName --jq '.tagName[1:] | tonumber + 1')"
          gh release create --latest "$NEXT_TAG" MobileNebula/app-release.apk
